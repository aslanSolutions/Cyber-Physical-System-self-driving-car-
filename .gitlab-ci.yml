image: registry.git.chalmers.se/courses/dit638/students/docker/docker:19.03.3

# Details about how to connect to the docker service to run this build
variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  BUILDX_PLATFORM: linux/amd64,linux/arm/v7


services:
  - name: registry.git.chalmers.se/courses/dit638/students/docker/docker:19.03.3-dind
    alias: docker

stages:
  - build
  - deploy

# Display information before we start the build and secure login.
before_script:
  - docker info
  - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY

# This section describes what shall be done to build and test the project.
build-and-test:
  tags:
    - docker-build
  stage: build
  script:
    - echo "Building image..."
    - docker build -f /builds/courses/dit638/students/2024-group-08/Dockerfile -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" .
    - echo "Pushing image..."
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
    - echo "Image pushed as $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"

# This section describes what shall be done to deploy artefacts from the project.
release:
  tags:
    - docker-build
  stage: deploy
  before_script:
    - mkdir -p ~/.docker/cli-plugins/
    - wget https://github.com/docker/buildx/releases/download/v0.7.1/buildx-v0.7.1.linux-amd64
    - chmod 755 ~/.docker/cli-plugins/docker-buildx
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
  script:
    - DOCKER_CLI_EXPERIMENTAL=enabled docker buildx create --name platformbuilder --use
    - DOCKER_CLI_EXPERIMENTAL=enabled docker buildx inspect --bootstrap
    - docker buildx build --push --platform "linux/amd64,linux/arm/v7" -t "$CI_REGISTRY_IMAGE":"$CI_COMMIT_TAG" .
  rules:
    - if: $CI_COMMIT_TAG =~ /^v(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)$/
      when: always

